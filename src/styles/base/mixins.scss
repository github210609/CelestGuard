@use "sass:color";
@use "sass:math";
@use "sass:map";
@use "sass:list";
@use "./variables" as *;

// 响应式混入
@mixin respond-to($breakpoint) {
  @if $breakpoint == "mobile" {
    @media (max-width: breakpoint("md")) {
      @content;
    }
  } @else if $breakpoint == "tablet" {
    @media (max-width: breakpoint("lg")) {
      @content;
    }
  } @else if $breakpoint == "desktop" {
    @media (min-width: breakpoint("xl")) {
      @content;
    }
  }
}

// 移动端断点
@mixin mobile {
  @include respond-to("mobile") {
    @content;
  }
}

// Flex布局工具
@mixin flex($direction: row, $justify: center, $align: center, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Flex居中
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// 毛玻璃效果
@mixin glass-effect($opacity: 0.8, $blur: 8px) {
  $bg-opacity: $opacity;
  $border-opacity: math.div($opacity, 4);
  
  background: rgba($bg-primary, $bg-opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: 1px solid rgba($bg-primary, $border-opacity);
  box-shadow: $shadow-controls;
}

// 渐变背景
@mixin gradient($direction: 45deg, $start-color: $theme-primary, $end-color: $theme-secondary) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 现代过渡效果
@mixin transition($properties...) {
  $transitions: ();
  @each $prop in $properties {
    $transitions: list.append(
      $transitions,
      $prop $transition-duration $transition-timing,
      comma
    );
  }
  transition: $transitions;
  @content;
}

// 动画性能优化
@mixin optimize-animation {
  will-change: transform;
  backface-visibility: hidden;
  perspective: 1000;
  transform: translateZ(0);
  
  @supports (transform-style: preserve-3d) {
    transform-style: preserve-3d;
  }
}

// 自定义滚动条
@mixin custom-scrollbar($width: 6px, $track-color: transparent, $thumb-color: $bg-secondary) {
  scrollbar-width: thin;
  scrollbar-color: $thumb-color $track-color;

  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: math.div($width, 2);
  }

  &::-webkit-scrollbar-thumb {
    background-color: $thumb-color;
    border-radius: math.div($width, 2);
    border: 2px solid $track-color;
    
    &:hover {
      background-color: color.adjust($thumb-color, $lightness: -10%);
    }
  }
}

// 文本截断
@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// 阴影效果
@mixin elevation($level: 1) {
  @if $level == 1 {
    box-shadow: $shadow-light;
  } @else if $level == 2 {
    box-shadow: $shadow-base;
  } @else if $level == 3 {
    box-shadow: $shadow-heavy;
  }
}

// 焦点状态
@mixin focus-ring($color: $theme-primary, $offset: 2px) {
  &:focus-visible {
    outline: none;
    box-shadow: 0 0 0 $offset rgba($color, 0.5);
  }
}

// 禁用状态
@mixin disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

// 渐变背景
@mixin gradient-bg($start-color: $theme-primary, $end-color: $theme-secondary, $direction: to right) {
  background: linear-gradient($direction, $start-color, $end-color);
  background-size: 200% auto;
  transition: background-position var(--transition-duration) var(--transition-timing);
  
  &:hover {
    background-position: right center;
  }
} 